This is pdfTeX, Version 3.1415926-2.5-1.40.14 (TeX Live 2013/Debian) (format=pdflatex 2014.1.11)  4 MAR 2014 23:20
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**diss.tex
(./diss.tex
LaTeX2e <2011/06/27>
Babel <3.9f> and hyphenation patterns for 78 languages loaded.
(/usr/share/texlive/texmf-dist/tex/latex/base/report.cls
Document Class: report 2007/10/19 v1.4h Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size12.clo
File: size12.clo 2007/10/19 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@chapter=\count80
\c@section=\count81
\c@subsection=\count82
\c@subsubsection=\count83
\c@paragraph=\count84
\c@subparagraph=\count85
\c@figure=\count86
\c@table=\count87
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
(/usr/share/texlive/texmf-dist/tex/latex/ntgclass/a4.sty
Package: a4 2004/04/15 v1.2g A4 based page layout
)
(/usr/share/texlive/texmf-dist/tex/latex/tools/verbatim.sty
Package: verbatim 2003/08/22 v1.5q LaTeX2e package for verbatim enhancements
\every@verbatim=\toks14
\verbatim@line=\toks15
\verbatim@in@stream=\read1
)
(/usr/share/texlive/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip10
Package: url 2006/04/12  ver 3.3  Verb mode for urls, etc.
)
(/usr/share/texlive/texmf-dist/tex/generic/epsf/epsf.tex
This is `epsf.tex' v2.7.4 <14 February 2011>
\epsffilein=\read2
\epsfframemargin=\dimen103
\epsfframethickness=\dimen104
\epsfrsize=\dimen105
\epsftmp=\dimen106
\epsftsize=\dimen107
\epsfxsize=\dimen108
\epsfysize=\dimen109
\pspoints=\dimen110
) (/usr/share/texlive/texmf-dist/tex/latex/listings/listings.sty
(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
\KV@toks@=\toks16
)
\lst@mode=\count88
\lst@gtempboxa=\box26
\lst@token=\toks17
\lst@length=\count89
\lst@currlwidth=\dimen111
\lst@column=\count90
\lst@pos=\count91
\lst@lostspace=\dimen112
\lst@width=\dimen113
\lst@newlines=\count92
\lst@lineno=\count93
\lst@maxwidth=\dimen114

(/usr/share/texlive/texmf-dist/tex/latex/listings/lstmisc.sty
File: lstmisc.sty 2013/07/10 1.5 (Carsten Heinz)
\c@lstnumber=\count94
\lst@skipnumbers=\count95
\lst@framebox=\box27
)
(/usr/share/texlive/texmf-dist/tex/latex/listings/listings.cfg
File: listings.cfg 2013/06/27 1.5pre1 listings configuration
))
Package: listings 2013/07/10 1.5 (Carsten Heinz)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/color.sty
Package: color 2005/11/14 v1.0j Standard LaTeX Color (DPC)

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/color.cfg
File: color.cfg 2007/01/18 v1.5 color configuration of teTeX/TeXLive
)
Package color Info: Driver file: pdftex.def on input line 130.

(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
)
\Gread@gobject=\count96
))
(/usr/share/texlive/texmf-dist/tex/latex/listings/lstlang1.sty
File: lstlang1.sty 2013/06/27 1.5pre1 listings language file
)
(/usr/share/texlive/texmf-dist/tex/latex/listings/lstlang2.sty
File: lstlang2.sty 2013/06/27 1.5pre1 listings language file
)
(/usr/share/texlive/texmf-dist/tex/latex/listings/lstlang1.sty
File: lstlang1.sty 2013/06/27 1.5pre1 listings language file
)
(/usr/share/texlive/texmf-dist/tex/latex/listings/lstlang2.sty
File: lstlang2.sty 2013/06/27 1.5pre1 listings language file
)
(/usr/share/texlive/texmf-dist/tex/latex/listings/lstmisc.sty
File: lstmisc.sty 2013/07/10 1.5 (Carsten Heinz)
) (./diss.aux)
\openout1 = `diss.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 66.
LaTeX Font Info:    ... okay on input line 66.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 66.
LaTeX Font Info:    ... okay on input line 66.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 66.
LaTeX Font Info:    ... okay on input line 66.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 66.
LaTeX Font Info:    ... okay on input line 66.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 66.
LaTeX Font Info:    ... okay on input line 66.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 66.
LaTeX Font Info:    ... okay on input line 66.
\c@lstlisting=\count97

(/usr/share/texlive/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count98
\scratchdimen=\dimen115
\scratchbox=\box28
\nofMPsegments=\count99
\nofMParguments=\count100
\everyMPshowfont=\toks18
\MPscratchCnt=\count101
\MPscratchDim=\dimen116
\MPnumerator=\count102
\makeMPintoPDFobject=\count103
\everyMPtoPDFconversion=\toks19
) [1

{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}] [2

]
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <14.4> on input line 103.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 103.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 116.

Overfull \hbox (10.57774pt too wide) in paragraph at lines 103--118
[]
 []

LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <12> on input line 131.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <8> on input line 131.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <6> on input line 131.
[1

] [2] (./diss.toc [3


])
\tf@toc=\write3
\openout3 = `diss.toc'.

 [4] (./diss.lof)
\tf@lof=\write4
\openout4 = `diss.lof'.

 [5

] [6]
Chapter 1.
[1


] [2]
LaTeX Font Info:    Try loading font information for OMS+cmr on input line 210.

 (/usr/share/texlive/texmf-dist/tex/latex/base/omscmr.fd
File: omscmr.fd 1999/05/25 v2.5h Standard LaTeX font definitions
)
LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <12> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 210.
 [3] [4]
Chapter 2.
[5

] [6

]
Chapter 3.
[7

] [8] [9] [10]
Chapter 4.
[11


] [12]
Chapter 5.
[13


] [14

] (./diss.bbl [15

]) [16]
Appendix A.
File: diss.tex  (verbatim)
[17


]
Overfull \hbox (98.06856pt too wide) in paragraph at lines 466--466
[]  \OT1/cmtt/m/n/8 backgroundcolor=\color{white},   % choose the background co
lor; you must add \usepackage{color} or \usepackage{xcolor}[] 
 []


Overfull \hbox (110.81874pt too wide) in paragraph at lines 466--466
[]  \OT1/cmtt/m/n/8 extendedchars=true,              % lets you use non-ASCII c
haracters; for 8-bits encodings only, does not work with UTF-8[] 
 []


Overfull \hbox (144.81923pt too wide) in paragraph at lines 466--466
[]  \OT1/cmtt/m/n/8 keepspaces=true,                 % keeps spaces in text, us
eful for keeping indentation of code (possibly needs columns=flexible)[] 
 []


Overfull \hbox (42.81776pt too wide) in paragraph at lines 466--466
[]  \OT1/cmtt/m/n/8 numbers=left,                    % where to put the line-nu
mbers; possible values are (none, left, right)[] 
 []


Overfull \hbox (204.32008pt too wide) in paragraph at lines 466--466
[]  \OT1/cmtt/m/n/8 rulecolor=\color{black},         % if not set, the frame-co
lor may be changed on line-breaks within not-black text (e.g. comments (green h
ere))[] 
 []


Overfull \hbox (106.56868pt too wide) in paragraph at lines 466--466
[]  \OT1/cmtt/m/n/8 showspaces=false,                % show spaces everywhere a
dding particular underscores; it overrides 'showstringspaces'[] 
 []


Overfull \hbox (51.31789pt too wide) in paragraph at lines 466--466
[]  \OT1/cmtt/m/n/8 stepnumber=2,                    % the step between two lin
e-numbers. If it's 1, each line will be numbered[] 
 []


Overfull \hbox (136.3191pt too wide) in paragraph at lines 466--466
[]  \OT1/cmtt/m/n/8 title=\lstname                   % show the filename of fil
es included with \lstinputlisting; also try caption instead of title[] 
 []

[18]
Overfull \hbox (1564.33961pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 To write an OCaml framework for lightweight threading. This f
ramework should be defined from basic semantics and have these semantics repres
ented in a theorem prover setting for verification. The verification should inc
lude proofs of basic monadic laws. This theorem prover representation should be
 extracted to OCaml where the extracted code should be as faithful to the repre
sentation as possible. The extracted code should be able to run OCaml code conc
urrently.[] 
 []

[19]
Overfull \hbox (858.82948pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 The goal of this project is to build a concurrency framework 
for OCaml. This framework will be designed with correctness in mind: developing
 the well defined semantics, modelled in a proof assistant and finally extracte
d to actual code. This project aims to be a verifiable reference implementation
.[] 
 []


Overfull \hbox (433.82338pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 Concurrency is the concept of more than one thread of executi
on can make progress in the same time period. A particular form of concurrency 
is parallelism, when threads physically run simultaneously.[] 
 []


Overfull \hbox (799.32863pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 Concurrent computation has became the norm for most applicati
ons with the rise of faster systems often with multiple cores. This can be expl
oited on multiple levels ranging from hardware supported instruction and thread
 level parallelism to software based heavy and lightweight models.[] 
 []


Overfull \hbox (854.57942pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 This project aims to model lightweight, cooperative concurren
cy. No threads are exposed to the underlying operating system or hardware. This
 means that blocking operations on the process level will still block all inter
nal threads. The threads themselves expose the points of possible interleaving.
[] 
 []


Overfull \hbox (1339.08638pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 The issue of concurrency occurs in most general programming l
anguages. However, functional languages often both less developed in this area 
and also fit well with concurrency without races for mutable data structures. F
unctional languages that have both actual industrial applications and large set
 of features are of particular interest. These languages include OCaml and Hask
ell. This project focuses on OCaml.[] 
 []


Overfull \hbox (1067.08247pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 OCaml is a high level programming language. It combines funct
ional, object-oriented and imperative paradigms.  used in large scale industria
l and academic projects where speed and correctness are of utmost importance. I
t uses one of the most powerful type systems and inference available to make ef
ficient and correct software engineering possible.[] 
 []


Overfull \hbox (824.829pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 There are two very successful monadic concurrency frameworks,
 LWT\cite{LWT} and Async\cite{Async}. They both provide the primitives for conc
urrent development in OCaml, however neither is supported by a clear semantic d
escription.  This is because their main focus was ease of use and speed.[] 
 []


Overfull \hbox (1674.8412pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 LWT, the lightweight cooperative threading library\cite{vouil
lon2008lwt} was designed as an open source framework entirely written in OCaml 
in a monadic style. It was successfully used in several large projects includin
g the Unison file synchroniser and the Ocsigen Web server. This library include
s many primitives to provide a feature rich framework, including primitives for
 thread creation, composition and cancel, thread local storage and support for 
various synchronisation techniques.[] 
 []


Overfull \hbox (234.07051pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 Async is an open source concurrency library for OCaml develop
ed by Jane Street. Unlike LWT the basic semantics are designed with promise mon
ads in mind.[] 
 []


Overfull \hbox (897.08003pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 With these implementations in mind the motivation of the proj
ect is to investigate the lack of certified implementation of a concurrency fra
mework. Verified concurrent systems have been researched for languages like C\c
ite{sevvcik2011relaxed}, C++ and Java\cite{lochbihler2012machine}, but not yet 
for OCaml.[] 
 []


Overfull \hbox (2023.3462pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 There have been a lot of work on how exactly to formulate the
 semantics of concurrent and distributed systems. Some of the most common model
s for lightweight concurrency\cite{deleuzelight} are captured\cite{friedman1988
applications} and delimited\cite{kiselyov2010delimited} continuations\cite{shan
2004shift}, trampolined style\cite{ganz1999trampolined}, continuation monads\ci
te{Claessen99functionalpearls}, promise monads\cite{liskov1988promises} and eve
nt based programming(used in the OCamlNet\cite{Ocamlnet} project). This work fo
cuses on the continuation monad style.[] 
 []


Overfull \hbox (629.32619pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 A monad\cite{hoareetal2001tackling} in functional programming
 is a construct to structure computations that are somehow "sequenced" together
. A monad requires two operations, $ >>= $ and ret, which are related by the mo
nadic associativity rules.[] 
 []


Overfull \hbox (357.32228pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 The continuation monad consists of a monadic type $ \alpha \,
 \textbf{con} $, where $ \alpha $ is a type parameter describing the type of op
eration enclosed and three key operations[] 
 []


Overfull \hbox (625.07613pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 \item{$>>=$, also known as bind. The operation sequences two 
operations one after the other. More formally it has a type $ \alpha \, \textbf
{con} \rightarrow ( \alpha \rightarrow \beta \, \textbf{con}) \rightarrow \beta
 \, \textbf{con}  $ and }[] 
 []


Overfull \hbox (229.82045pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 \item{ret, also known as return. It has type $ \alpha \righta
rrow \alpha \, \textbf{con} $ and simply evaluates its parameter and boxes up t
he result.}[] 
 []


Overfull \hbox (1139.33351pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 The third operation is fork, which is the way to spawn new th
reads (two in this particular case). The approach taken in this work is to have
 fork take two arguments, evaluate the two paths concurrently. The concurrency 
is achieved by reducing each path step by step based on some scheduler. When ei
ther path reduced to a value it returns a boxed up pair of results.[] 
 []

[20]
Overfull \hbox (81.06831pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 These results can be both values, or a value and a boxed up c
omputation (that is, the partially reduced other path).[] 
 []


Overfull \hbox (510.32448pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 \[ \textbf{fork} \, : \, \alpha \, \textbf{con} \rightarrow \
beta \, \textbf{con} \rightarrow ((\alpha * \beta ) \, + \, (\alpha *  \beta \,
 \textbf{con}) \, + \, ( \alpha \, \textbf{con} * \beta) ) \, \textbf{con} \][]
 
 []


Overfull \hbox (2631.10493pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 These semantics can be modelled in logic, in particular logic
s used by proof assistants. Mechanisation of semantics in proof assistant has b
een accepted as a way of formal verification of properties about said semantics
 \cite{benton2008mechanized,blazy2009mechanized, blazy2006formal, leroy2009form
al}. Most often used proof assistants include Coq \cite{Coq}, HOL and Isabelle.
 There has been much effort to make this mechanisation as easy as possible with
 tools like Ott\cite{Ott}, which enable working semanticists to describe their 
language in a simple, ascii-art like style while versatile in destination langu
ages, including the above mentioned proof assistants, \LaTeX \, and some direct
 OCaml representations.[] 
 []


Overfull \hbox (1050.08223pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 Coq is formal proof assistant with a mathematical higher-leve
l language called \textit{Gallina}, based around the Calculus of Inductive Cons
tructions, that can be used to define functions and predicates, state, formally
 prove and machine check mathematical theorems and extract certified programs t
o high level languages like Haskell and OCaml.[] 
 []


Overfull \hbox (994.83144pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 This logical representation is more amenable to proofs than t
o actual execution and the evaluation with respect to other implementations, wh
ich is why much research has gone into extraction of these representations as c
ertified programs in functional programming languages including OCaml \cite{let
ouzey2008extraction} and Haskell.[] 
 []


Overfull \hbox (98.06856pt too wide) in paragraph at lines 466--466
[]\OT1/cmtt/m/n/8 Inductive sets often map simply to data structures of type co
nstructors and constructive proofs to computable functions.[] 
 []

[21] [22] [23] [24]
No file proposal.tex.
No file propbody.tex.
[25] [26

]
Appendix B.
No file makefile.txt.
File: refs.bib  (verbatim)

Overfull \hbox (166.06953pt too wide) in paragraph at lines 484--484
[]\OT1/cmtt/m/n/8 @MISC{Claessen99functionalpearls, author = {Koen Claessen}, t
itle = {Functional Pearls: A Poor Man's Concurrency Monad}, year = {1999} }[] 
 []

[27

] [28] [29]
Overfull \hbox (110.81874pt too wide) in paragraph at lines 484--484
[]  \OT1/cmtt/m/n/8 title={Tackling the awkward squad: monadic input/output, co
ncurrency, exceptions, and foreign-language calls in Haskell},[] 
 []


Overfull \hbox (34.31764pt too wide) in paragraph at lines 484--484
[]  \OT1/cmtt/m/n/8 title={Promises: linguistic support for efficient asynchron
ous procedure calls in distributed systems},[] 
 []

[30]
Overfull \hbox (149.06929pt too wide) in paragraph at lines 484--484
[]  \OT1/cmtt/m/n/8 author={{\^S}ev{\v{c}}ik, Jaroslav and Vafeiadis, Viktor an
d Zappa Nardelli, Francesco and Jagannathan, Suresh and Sewell, Peter},[] 
 []


Overfull \hbox (136.3191pt too wide) in paragraph at lines 484--484
[]  \OT1/cmtt/m/n/8 title={A Machine-Checked, Type-Safe Model of Java Concurren
cy: Language, Virtual Machine, Memory Model, and Verified Compiler},[] 
 []

[31] [32

]
Appendix C.
(./partIIproposal.tex [33

] [34] [35] [36]) [37] (./diss.aux) ) 
Here is how much of TeX's memory you used:
 2676 strings out of 493307
 37477 string characters out of 6139905
 128225 words of memory out of 5000000
 6117 multiletter control sequences out of 15000+600000
 11897 words of font info for 44 fonts, out of 8000000 for 9000
 957 hyphenation exceptions out of 8191
 33i,11n,58p,765b,1030s stack positions out of 5000i,500n,10000p,200000b,80000s
</usr/share/texlive/texmf-dist/fonts/type1
/public/amsfonts/cm/cmbx12.pfb></usr/share/texlive/texmf-dist/fonts/type1/publi
c/amsfonts/cm/cmmi12.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsf
onts/cm/cmr10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm
/cmr12.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr17.
pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr6.pfb></us
r/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr7.pfb></usr/share/
texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr8.pfb></usr/share/texlive/
texmf-dist/fonts/type1/public/amsfonts/cm/cmsl12.pfb></usr/share/texlive/texmf-
dist/fonts/type1/public/amsfonts/cm/cmsy10.pfb></usr/share/texlive/texmf-dist/f
onts/type1/public/amsfonts/cm/cmti12.pfb></usr/share/texlive/texmf-dist/fonts/t
ype1/public/amsfonts/cm/cmtt10.pfb></usr/share/texlive/texmf-dist/fonts/type1/p
ublic/amsfonts/cm/cmtt12.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/
amsfonts/cm/cmtt8.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfont
s/latxfont/lcircle1.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfo
nts/latxfont/line10.pfb>
Output written on diss.pdf (45 pages, 234643 bytes).
PDF statistics:
 215 PDF objects out of 1000 (max. 8388607)
 150 compressed objects within 2 object streams
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

