\begin{thebibliography}{10}

\bibitem{Lem}
Lem, a tool for lightweight executable mathematics.
\newblock \url{http://www.cs.kent.ac.uk/people/staff/sao/lem/}.

\bibitem{LWT}
Lwt, lightweight threading library.
\newblock \url{http://ocsigen.org/lwt/}.

\bibitem{OCaml}
Ocaml.
\newblock \url{http://ocaml.org/}.

\bibitem{Coq}
Ott, a tool for writing definitions of programming languages and calculi.
\newblock \url{http://coq.inria.fr/}.

\bibitem{OCamlLightWeb}
Ott, a tool for writing definitions of programming languages and calculi.
\newblock \url{http://www.cl.cam.ac.uk/~so294/ocaml/}, 2008.

\bibitem{benton2008mechanized}
Nick Benton and Vasileios Koutavas.
\newblock A mechanized bisimulation for the nu-calculus.
\newblock {\em Higher-Order and Symbolic Computation (to appear, 2013)}, 2008.

\bibitem{blazy2006formal}
Sandrine Blazy, Zaynah Dargaye, and Xavier Leroy.
\newblock Formal verification of a c compiler front-end.
\newblock In {\em FM 2006: Formal Methods}, pages 460--475. Springer, 2006.

\bibitem{blazy2009mechanized}
Sandrine Blazy and Xavier Leroy.
\newblock Mechanized semantics for the clight subset of the c language.
\newblock {\em Journal of Automated Reasoning}, 43(3):263--288, 2009.

\bibitem{Claessen99functionalpearls}
Koen Claessen.
\newblock Functional pearls: A poor man's concurrency monad, 1999.

\bibitem{deleuzelight}
Christophe Deleuze.
\newblock Light weight concurrency in ocaml: Continuations, monads, promises,
  events.

\bibitem{friedman1988applications}
Daniel~P Friedman.
\newblock Applications of continuations.
\newblock In {\em Proceedings of the ACM Conference on Principles of
  Programming Languages}, 1988.

\bibitem{ganz1999trampolined}
Steven~E Ganz, Daniel~P Friedman, and Mitchell Wand.
\newblock Trampolined style.
\newblock In {\em ACM SIGPLAN Notices}, volume~34, pages 18--27. ACM, 1999.

\bibitem{hoareetal2001tackling}
CAR Hoareetal.
\newblock Tackling the awkward squad: monadic input/output, concurrency,
  exceptions, and foreign-language calls in haskell.
\newblock {\em Engineering theories of software construction}, 180:47, 2001.

\bibitem{functory}
Jean-Christophe Filli{\^a}tre~K Kalyanasundaram.
\newblock Functory.
\newblock \url{https://www.lri.fr/~filliatr/functory/About.html}, 2010.

\bibitem{kiselyov2010delimited}
Oleg Kiselyov.
\newblock Delimited control in ocaml, abstractly and concretely: System
  description.
\newblock In {\em Functional and Logic Programming}, pages 304--320. Springer,
  2010.

\bibitem{ocamlmpi}
Xavier Leroy.
\newblock Ocamlmpi: Interface with the mpi message-passing interface.

\bibitem{leroy2009formal}
Xavier Leroy.
\newblock Formal verification of a realistic compiler.
\newblock {\em Communications of the ACM}, 52(7):107--115, 2009.

\bibitem{letouzey2008extraction}
Pierre Letouzey.
\newblock Extraction in coq: An overview.
\newblock In {\em Logic and Theory of Algorithms}, pages 359--369. Springer,
  2008.

\bibitem{liskov1988promises}
Barbara Liskov and Liuba Shrira.
\newblock {\em Promises: linguistic support for efficient asynchronous
  procedure calls in distributed systems}, volume~23.
\newblock ACM, 1988.

\bibitem{lochbihler2012machine}
Andreas Lochbihler.
\newblock {\em A Machine-Checked, Type-Safe Model of Java Concurrency:
  Language, Virtual Machine, Memory Model, and Verified Compiler}.
\newblock KIT Scientific Publishing, 2012.

\bibitem{jocaml}
Louis Mandel and Luc Maranget.
\newblock The {JoCaml} system.
\newblock \url{http://jocaml.inria.fr/}, 2007.

\bibitem{Ott}
Francesco~Zappa Nardelli.
\newblock Ott, a tool for writing definitions of programming languages and
  calculi.
\newblock \url{http://www.cl.cam.ac.uk/~pes20/ott/}.

\bibitem{OCamlLight}
Scott Owens.
\newblock A sound semantics for ocaml light.
\newblock In {\em Programming Languages and Systems}, pages 1--15. Springer,
  2008.

\bibitem{sevvcik2011relaxed}
Jaroslav {\^S}ev{\v{c}}ik, Viktor Vafeiadis, Francesco Zappa~Nardelli, Suresh
  Jagannathan, and Peter Sewell.
\newblock Relaxed-memory concurrency and verified compilation.
\newblock In {\em ACM SIGPLAN Notices}, volume~46, pages 43--54. ACM, 2011.

\bibitem{shan2004shift}
Chung-chieh Shan.
\newblock Shift to control.
\newblock In {\em Proceedings of the 5th workshop on Scheme and Functional
  Programming}, pages 99--107, 2004.

\bibitem{Ocamlnet}
Gerd Stolpmann.
\newblock Ocamlnet.
\newblock \url{http://projects.camlcity.org/projects/ocamlnet.html}.

\bibitem{Async}
Jane Street.
\newblock Async, open source concurrency library.

\bibitem{vouillon2008lwt}
J{\'e}r{\^o}me Vouillon.
\newblock Lwt: a cooperative thread library.
\newblock In {\em Proceedings of the 2008 ACM SIGPLAN workshop on ML}, pages
  3--12. ACM, 2008.

\end{thebibliography}
