(* generated by Ott 0.21.2 from: ./ski.ott *)

Require Import Arith.
Require Import Bool.
Require Import List.


Definition var := nat. (*r term variable *)
Lemma eq_var: forall (x y : var), {x = y} + {x <> y}.
Proof.
  decide equality; auto with ott_coq_equality arith.
Defined.
Hint Resolve eq_var : ott_coq_equality.

Inductive term : Set :=  (*r term *)
 | t_subt : term
 | t_selt : term
 | t_idt : term
 | t_app : term
 | t_var (x:var) (*r variable *).
(** definitions *)

(* defns Jop *)
Inductive reduce : term -> term -> Prop :=    (* defn reduce *)
 | ax_idapp : 
     (PARSE_ERROR "line 26 - 27" "no parses (char 8):     (I t***) -->  t ")
 | ax_selapp : 
     (PARSE_ERROR "line 30 - 31" "no parses (char 9):     ((K t***) t') -->  t ")
 | ax_combapp : 
     (PARSE_ERROR "line 34 - 35" "no parses (char 10):     (((S t***) t') t'') -->  ((t t'')(t' t'')) ").


